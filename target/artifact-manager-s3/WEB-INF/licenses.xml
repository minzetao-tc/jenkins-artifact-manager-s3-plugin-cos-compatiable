<?xml version='1.0' encoding='UTF-8'?>
<l:dependencies xmlns:l='licenses' groupId='io.jenkins.plugins' artifactId='artifact-manager-s3' version='1.16.2-SNAPSHOT'><l:dependency name='Artifact Manager on S3 plugin' groupId='io.jenkins.plugins' artifactId='artifact-manager-s3' version='1.16.2-SNAPSHOT' url='https://github.com/jenkinsci/artifact-manager-s3-plugin'><l:description>A Jenkins plugin to keep artifacts and Pipeline stashes in Amazon S3.</l:description><l:license name='MIT License' url='https://opensource.org/licenses/MIT'/></l:dependency><l:dependency name='jclouds Components Core' groupId='org.apache.jclouds' artifactId='jclouds-core' version='2.2.1' url='https://jclouds.apache.org/jclouds-core/'><l:description>Core components to access jclouds services</l:description><l:license name='The Apache Software License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Guava: Google Core Libraries for Java' groupId='com.google.guava' artifactId='guava' version='31.0.1-jre' url='https://github.com/google/guava'><l:description>Guava is a suite of core and expanded libraries that include
    utility classes, Google's collections, I/O classes, and
    much more.</l:description><l:license name='Apache License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Guava ListenableFuture only' groupId='com.google.guava' artifactId='listenablefuture' version='9999.0-empty-to-avoid-conflict-with-guava' url='https://github.com/google/guava/listenablefuture'><l:description>An empty artifact that Guava depends on to signal that it is providing
    ListenableFuture -- but is also available in a second "version" that
    contains com.google.common.util.concurrent.ListenableFuture class, without
    any other Guava classes. The idea is:

    - If users want only ListenableFuture, they depend on listenablefuture-1.0.

    - If users want all of Guava, they depend on guava, which, as of Guava
    27.0, depends on
    listenablefuture-9999.0-empty-to-avoid-conflict-with-guava. The 9999.0-...
    version number is enough for some build systems (notably, Gradle) to select
    that empty artifact over the "real" listenablefuture-1.0 -- avoiding a
    conflict with the copy of ListenableFuture in guava itself. If users are
    using an older version of Guava or a build system other than Gradle, they
    may see class conflicts. If so, they can solve them by manually excluding
    the listenablefuture artifact or manually forcing their build systems to
    use 9999.0-....</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Protocol Buffers [Core]' groupId='com.google.protobuf' artifactId='protobuf-java' version='3.11.1' url='https://developers.google.com/protocol-buffers/protobuf-java/'><l:description>Core Protocol Buffers library. Protocol Buffers are a way of encoding structured data in an
    efficient yet extensible format.</l:description><l:license name='3-Clause BSD License' url='https://opensource.org/licenses/BSD-3-Clause'/></l:dependency><l:dependency name='Caffeine API Plugin' groupId='io.jenkins.plugins' artifactId='caffeine-api' version='2.9.2-29.v717aac953ff3' url='https://github.com/jenkinsci/caffeine-api-plugin'><l:description>Jenkins plugin that packages Caffeine for use by other plugins.</l:description><l:license name='Apache License v2' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='jclouds sts api' groupId='org.apache.jclouds.api' artifactId='sts' version='2.2.1' url='https://jclouds.apache.org/sts/'><l:description>jclouds components to access an implementation of Security Token Service (STS)</l:description><l:license name='The Apache Software License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Tink Cryptography API' groupId='com.google.crypto.tink' artifactId='tink' version='1.5.0' url='http://github.com/google/tink'><l:description>Tink is a small cryptographic library that provides a safe, simple, agile and fast way to accomplish some common cryptographic tasks.</l:description><l:license name='Apache License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='jclouds Amazon Simple Storage Service (S3) provider' groupId='org.apache.jclouds.provider' artifactId='aws-s3' version='2.2.1' url='https://jclouds.apache.org/aws-s3/'><l:description>Simple Storage Service (S3) implementation targeted to Amazon Web Services</l:description><l:license name='The Apache Software License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='J2ObjC Annotations' groupId='com.google.j2objc' artifactId='j2objc-annotations' version='1.3' url='https://github.com/google/j2objc/'><l:description>A set of annotations that provide additional information to the J2ObjC
    translator to modify the result of translation.</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='error-prone annotations' groupId='com.google.errorprone' artifactId='error_prone_annotations' version='2.9.0' url='https://errorprone.info/error_prone_annotations'><l:description>Error Prone is a static analysis tool for Java that catches common programming mistakes at compile-time.</l:description><l:license name='Apache 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='JSR-250 Common Annotations for the JavaTM Platform' groupId='javax.annotation' artifactId='jsr250-api' version='1.0' url='http://jcp.org/aboutJava/communityprocess/final/jsr250/index.html'><l:description>JSR-250 Reference Implementation by Glassfish</l:description><l:license name='COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0' url='https://glassfish.dev.java.net/public/CDDLv1.0.html'/></l:dependency><l:dependency name='Guava InternalFutureFailureAccess and InternalFutures' groupId='com.google.guava' artifactId='failureaccess' version='1.0.1' url='https://github.com/google/guava/failureaccess'><l:description>Contains
    com.google.common.util.concurrent.internal.InternalFutureFailureAccess and
    InternalFutures. Most users will never need to use this artifact. Its
    classes is conceptually a part of Guava, but they're in this separate
    artifact so that Android libraries can use them without pulling in all of
    Guava (just as they can use ListenableFuture by depending on the
    listenablefuture artifact).</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='jclouds-gson OSGi bundle' groupId='org.apache.jclouds' artifactId='jclouds-gson' version='2.2.1' url='https://jclouds.apache.org/jclouds-gson/'><l:description>jclouds-gson OSGi bundle with gson internal packages relocated</l:description><l:license name='The Apache Software License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Ganymed SSH2 for Java' groupId='org.jenkins-ci' artifactId='trilead-ssh2' version='build-217-jenkins-27' url='http://svn.svnkit.com/repos/3rdparty/com.trilead.ssh2/tags/1.0.0-build217/trilead-ssh2/'><l:description>Ganymed SSH2 for Java is a library which implements the SSH-2 protocol in pure Java</l:description><l:license name='BSD style license' url='http://www.ganymed.ethz.ch/ssh2/LICENSE.txt'/></l:dependency><l:dependency name='PuTTY support for Trilead SSH2 library' groupId='org.kohsuke' artifactId='trilead-putty-extension' version='1.2' url='http://trilead-putty-extension.kohsuke.org/'><l:description>Loads SSH key in the PuTTY format</l:description><l:license name='MIT license' url='http://www.opensource.org/licenses/mit-license.php'/></l:dependency><l:dependency name='javax.ws.rs-api' groupId='javax.ws.rs' artifactId='javax.ws.rs-api' version='2.0.1' url='http://jax-rs-spec.java.net'><l:description>Java.net - The Source for Java Technology Collaboration</l:description><l:license name='CDDL 1.1' url='http://glassfish.java.net/public/CDDL+GPL_1_1.html'/><l:license name='GPL2 w/ CPE' url='http://glassfish.java.net/public/CDDL+GPL_1_1.html'/></l:dependency><l:dependency name='Google Guice - Extensions - AssistedInject' groupId='com.google.inject.extensions' artifactId='guice-assistedinject' version='4.0' url='https://github.com/google/guice/extensions-parent/guice-assistedinject'><l:description>Guice is a lightweight dependency injection framework for Java 6 and above</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='FindBugs-jsr305' groupId='com.google.code.findbugs' artifactId='jsr305' version='3.0.2' url='http://findbugs.sourceforge.net/'><l:description>JSR305 Annotations for Findbugs</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='JSON in Java' groupId='org.json' artifactId='json' version='20210307' url='https://github.com/douglascrockford/JSON-java'><l:description>JSON is a light-weight, language independent, data interchange format.
        See http://www.JSON.org/

        The files in this package implement JSON encoders/decoders in Java.
        It also includes the capability to convert between JSON and XML, HTTP
        headers, Cookies, and CDL.

        This is a reference implementation. There is a large number of JSON packages
        in Java. Perhaps someday the Java community will standardize on one. Until
        then, choose carefully.

        The license includes this restriction: "The software shall be used for good,
        not evil." If your conscience cannot live with that, then choose a different
        package.</l:description><l:license name='The JSON License' url='http://json.org/license.html'/></l:dependency><l:dependency name='SnakeYAML' groupId='org.yaml' artifactId='snakeyaml' version='1.29' url='http://www.snakeyaml.org'><l:description>YAML 1.1 parser and emitter for Java</l:description><l:license name='Apache License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Caffeine cache' groupId='com.github.ben-manes.caffeine' artifactId='caffeine' version='2.9.2' url='https://github.com/ben-manes/caffeine'><l:description>A high performance caching library</l:description><l:license name='Apache License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Trilead API Plugin' groupId='org.jenkins-ci.plugins' artifactId='trilead-api' version='1.0.13' url='https://github.com/jenkinsci/trilead-api-plugin'><l:description>This plugin provides access to Trilead without having to bundle Trilead in Jenkins core</l:description><l:license name='The MIT license' url='https://opensource.org/licenses/MIT'/></l:dependency><l:dependency name='EdDSA-Java' groupId='net.i2p.crypto' artifactId='eddsa' version='0.3.0' url='https://github.com/str4d/ed25519-java'><l:description>Implementation of EdDSA in Java</l:description><l:license name='CC0 1.0 Universal' url='https://creativecommons.org/publicdomain/zero/1.0/'/></l:dependency><l:dependency name='base64' groupId='net.iharder' artifactId='base64' version='2.3.8' url='http://iharder.net/base64/'><l:description>A Java class providing very fast Base64 encoding and decoding 
               in the form of convenience methods and input/output streams.</l:description><l:license name='Public domain' url=''/></l:dependency><l:dependency name='jclouds s3 api' groupId='org.apache.jclouds.api' artifactId='s3' version='2.2.1' url='https://jclouds.apache.org/s3/'><l:description>jclouds components to access an implementation of S3</l:description><l:license name='The Apache Software License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='jclouds blobstore core' groupId='org.apache.jclouds' artifactId='jclouds-blobstore' version='2.2.1' url='https://jclouds.apache.org/jclouds-blobstore/'><l:description>jclouds components to access blobstore</l:description><l:license name='The Apache Software License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='SSH Credentials Plugin' groupId='org.jenkins-ci.plugins' artifactId='ssh-credentials' version='1.18.1' url='https://github.com/jenkinsci/ssh-credentials-plugin/blob/master/doc/README.md'><l:description>Allows storage of SSH credentials in Jenkins</l:description><l:license name='MIT License' url='https://opensource.org/licenses/MIT'/></l:dependency><l:dependency name='Checker Qual' groupId='org.checkerframework' artifactId='checker-qual' version='3.12.0' url='https://checkerframework.org'><l:description>checker-qual contains annotations (type qualifiers) that a programmer
writes to specify Java code for type-checking by the Checker Framework.</l:description><l:license name='The MIT License' url='http://opensource.org/licenses/MIT'/></l:dependency><l:dependency name='Snakeyaml API Plugin' groupId='io.jenkins.plugins' artifactId='snakeyaml-api' version='1.29.1' url='https://github.com/jenkinsci/snakeyaml-api-plugin'><l:description>This plugin packages stock Snakeyaml library</l:description><l:license name='The MIT License (MIT)' url='http://opensource.org/licenses/MIT'/></l:dependency><l:dependency name='java-xmlbuilder' groupId='com.jamesmurty.utils' artifactId='java-xmlbuilder' version='1.1' url='https://github.com/jmurty/java-xmlbuilder'><l:description>XML Builder is a utility that creates simple XML documents using relatively sparse Java code</l:description><l:license name='Apache License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0'/></l:dependency></l:dependencies>